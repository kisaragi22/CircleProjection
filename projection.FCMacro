
#import FreeCAD
import Draft
import Spreadsheet
import math

def setObjColor(obj, color):
	# set color for all faces of selected object
	colorlist=[]
	for i in range(len(obj.Shape.Faces)):
		colorlist.append(color)
	print('[*] Object contains %d faces'%(len(colorlist),))
	obj.ViewObject.DiffuseColor = colorlist

#ザグリ穴用色変更関数
def setObjColor2(obj, color, color2):
	# set color for all faces of selected object
	colorlist=[]
	for i in range(len(obj.Shape.Faces)):
		colorlist.append(color)
	print('[*] Object contains %d faces'%(len(colorlist),))
	colorlist[2]=color2
	obj.ViewObject.DiffuseColor = colorlist

doc = App.ActiveDocument
dg = Draft.downgrade(App.ActiveDocument.ActiveObject, delete=True)

#   Create Spreadsheet
sheet = App.ActiveDocument.addObject("Spreadsheet::Sheet","HoleDimensions")
sheet.Label = "Dimensions"

index = [chr(i) for i in range(65,65+26)]
value = ('Name','x','y','z','D1','D2','H','Type')

for i, val in enumerate(value):
   sheet.set(index[i] + '1', val)

#   upgrade Edge
for upEdge in dg[0]:
   circle = Draft.upgrade(upEdge, delete=True)

i = 0
for cir in doc.findObjects(Name="Circle"):
   zoffset = -5		#extension length for bottom side
   H = 25			#Zaguri bottom hight
   d = cir.Radius * 2

#   detect Hole Type
   if d > round(d)-0.1 and d < round(d)+0.1:
      Type = "Dowel"
      D1 = round(d)
      D2 = D1 + 1
   else:
      Type = "Bolt"
      nominal = math.floor(cir.Radius) * 2
      D1 = nominal + 2
      D2 = nominal * 1.5 + 2

#   create Cylinder
   cyl = doc.addObject("Part::Cylinder","Cylinder1_" + str(i).zfill(3))
   cyl.Radius = D1 / 2
   cyl.Height = 200 + zoffset
   cyl.Placement.Base.x = cir.Placement.Base.x
   cyl.Placement.Base.y = cir.Placement.Base.y
   cyl.Placement.Base.z = zoffset
#   create Chamfer
   chamfer = 1
   cone1 = doc.addObject("Part::Cone","Cone1_" + str(i).zfill(3))
   cone1.Height = 5
   cone1.Radius1 = cyl.Radius
   cone1.Radius2 = cone1.Radius1 + cone1.Height
   cone1.Placement.Base.x = cyl.Placement.Base.x
   cone1.Placement.Base.y = cyl.Placement.Base.y
   cone1.Placement.Base.z = chamfer
   cone1.Placement.Rotation.Axis = (0.0, 1.0, 0.0)
   cone1.Placement.Rotation.Angle = 180 / 180 * math.pi	#deg-rad trans

   cyl2 = doc.addObject("Part::Cylinder","Cylinder2_" + str(i).zfill(3))
   cyl2.Radius = D2 / 2
   cyl2.Height = cyl.Height - H
   cyl2.Placement.Base.x = cir.Placement.Base.x
   cyl2.Placement.Base.y = cir.Placement.Base.y
   cyl2.Placement.Base.z = H

#   cir.Placement.Base.z = 0
#   cir.Placement.Base

#   create Circle Center Point
   vtx = doc.addObject("Part::Vertex","Vertex_" + str(i).zfill(3))
   vtx.X = cir.Placement.Base.x
   vtx.Y = cir.Placement.Base.y

#   set Face Color
   if (Type == "Dowel"):
      setObjColor(cyl, (1.0 ,1.0 ,0.0))
      setObjColor(cyl2, (0.0 ,0.0 ,1.0))
   elif (Type == "Bolt"):
      setObjColor(cyl, (0.0 ,0.0 ,1.0))
      setObjColor2(cyl2, (0.0 ,0.0 ,1.0), (1.0, 0.0, 0.0))

   setObjColor(cone1, (0.0 ,0.0 ,1.0))

#   Value set to Spreadsheet

   index = [chr(j) for j in range(65,65+26)]
   value = [(str(cir.Label), 'Lbl_'), \
            (str(cir.Placement.Base.x), 'DimX_'), \
            (str(cir.Placement.Base.y), 'DimY_'),\
            (str(cir.Placement.Base.z), 'DimZ_'), \
            (str(D1), 'D1_'), \
            (f'{D2}', 'D2_'), \
            (f'{H}', 'H_'), \
            (Type, 'Type_')]

   for j, val in enumerate(value):
      sheet.set(index[j] + str(i+2), val[0])
      sheet.setAlias(index[j] + str(i+2), val[1] + str(i).zfill(3))

#   Object Property Link to Spreadsheet

   cyl.setExpression('Radius','0.5 * HoleDimensions.D1_' + str(i).zfill(3))
   cyl2.setExpression('Radius','0.5 * HoleDimensions.D2_' + str(i).zfill(3))
   cyl2.setExpression('Placement.Base.z','HoleDimensions.H_' + str(i).zfill(3))

   i += 1
FreeCAD.ActiveDocument.recompute()

